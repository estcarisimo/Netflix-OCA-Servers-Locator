name: Docker

on:
  push:
    branches: [ master, main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ master, main ]

env:
  IMAGE_NAME: netflix-oca-locator

jobs:
  docker-build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha

    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: false
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Test Docker image
      run: |
        docker run --rm ${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }} version
        docker run --rm ${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }} info

  docker-security:
    runs-on: ubuntu-latest
    needs: docker-build
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build image for security scan
      uses: docker/build-push-action@v5
      with:
        context: .
        load: true
        tags: ${{ env.IMAGE_NAME }}:security-scan

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ env.IMAGE_NAME }}:security-scan
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  docker-integration:
    runs-on: ubuntu-latest
    needs: docker-build
    if: github.ref == 'refs/heads/master'
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build test image
      uses: docker/build-push-action@v5
      with:
        context: .
        load: true
        tags: ${{ env.IMAGE_NAME }}:test

    - name: Create test output directory
      run: mkdir -p ${{ github.workspace }}/test-output

    - name: Test Docker functionality
      run: |
        # Test basic functionality
        docker run --rm \
          -v ${{ github.workspace }}/test-output:/app/output \
          ${{ env.IMAGE_NAME }}:test version

        # Test help command
        docker run --rm ${{ env.IMAGE_NAME }}:test --help

        # Test info command
        docker run --rm ${{ env.IMAGE_NAME }}:test info

    - name: Upload test artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: docker-test-output
        path: test-output/